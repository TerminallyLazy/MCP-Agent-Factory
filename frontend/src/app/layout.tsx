import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import Providers from "@/components/Providers";
import { HeaderWrapper } from "@/components/header-wrapper";
import mcpConfig from "@/mcp_config.json";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  // Create server objects with tools (without the isActive property for server components)
  const serverList = Object.entries(mcpConfig.mcpServers).map(([id, server]: [string, any]) => ({
    id,
    name: id.split('-').pop() || id, // Get the last part after hyphen or full id if no hyphen
    tools: Object.entries(server.tools || {}).map(([name, description]: [string, any]) => ({
      name,
      description: typeof description === 'string' ? description : 'No description available'
    }))
  }));
  
  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <Providers>
          <HeaderWrapper initialServers={serverList} />
          <main className="container px-4 py-4">
            {children}
          </main>
        </Providers>
      </body>
    </html>
  );
}
